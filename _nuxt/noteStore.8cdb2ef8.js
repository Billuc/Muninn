import{J as r,X as o}from"./entry.9eb24a14.js";import{d as a}from"./Input.vue.e21bd4c4.js";var i=(e=>(e.red="red",e.green="green",e.blue="blue",e))(i||{});const g=a("notes",{state:()=>({notes:new Map,tags:new Map,nextNoteId:0,nextTagId:0}),getters:{getNote:e=>t=>{if(!e.notes.has(t))throw new Error(`[Notes] Note with ID ${t} not found`);return e.notes.get(t)}},actions:{newNote(e,t){this.notes.set(this.nextNoteId,{id:this.nextNoteId,title:e,tagIds:t,text:""}),this.nextNoteId++},editNote(e,t,s){this.getNote(e).title=t,this.getNote(e).text=s},removeNote(e){if(!this.notes.delete(e))throw new Error(`[Notes] Note with ID ${e} not found`)},newTag(e){this.tags.set(this.nextTagId,{id:this.nextTagId,title:e,color:r.sample(Object.values(i)),icon:[o.prefix,o.iconName]}),this.nextTagId++},removeTag(e){this.tags.delete(e)},editTag(e,t){if(!this.tags.has(e))throw new Error(`[Notes] Tag with ID ${e} not found`);this.tags.set(e,t)},addTagToNote(e,t){const s=this.getNote(e).tagIds;s.includes(t)?console.warn(`[Notes] Note with ID ${e} already has tag with ID ${t}`):s.push(t)},removeTagfromNote(e,t){const s=this.getNote(e).tagIds;s.includes(t)?this.getNote(e).tagIds=s.filter(n=>n!=t):console.warn(`[Notes] Note with ID ${e} doesn't have tag with ID ${t}`)}}});export{i as T,g as u};
