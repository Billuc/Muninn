import{v as r}from"./entry.49f3b586.js";import{d as a}from"./PageHeading.ad0b6c3e.js";const g=a("notes",{state:()=>({notes:new Map,tags:new Map,nextNoteId:0,nextTagId:0}),getters:{getNote:t=>e=>{if(!t.notes.has(e))throw new Error(`[Notes] Note with ID ${e} not found`);return t.notes.get(e)},tagArray:t=>[...t.tags.values()]},actions:{newNote(t,e){this.notes.set(this.nextNoteId,{id:this.nextNoteId,title:t,tagId:e,text:""}),this.nextNoteId++},editNote(t,e,s,o){this.getNote(t).title=e,this.getNote(t).text=s,this.getNote(t).tagId=o},removeNote(t){if(!this.notes.delete(t))throw new Error(`[Notes] Note with ID ${t} not found`)},newTag(t,e,s){if(r.some([...this.tags.values()],o=>o.color===e))throw new Error(`[Notes] Tag with color ${e} already exists`);this.tags.set(this.nextTagId,{id:this.nextTagId,title:t,color:e,icon:s}),this.nextTagId++},removeTag(t){this.tags.delete(t)},editTag(t,e,s,o){if(!this.tags.has(t))throw new Error(`[Notes] Tag with ID ${t} not found`);if(r.some([...this.tags.values()],i=>i.id!==t&&i.color===s))throw new Error(`[Notes] Tag with color ${s} already exists`);this.tags.set(t,{id:t,color:s,title:e,icon:o})}}});export{g as u};
